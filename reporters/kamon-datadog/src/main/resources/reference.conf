# ===================================== #
# Kamon-Datadog Reference Configuration #
# ===================================== #

kamon {
  datadog {

    #
    # Settings relevant to the DatadogAgentReporter
    #
    agent {
      # Hostname and port in which your dogstatsd is running (if not using the API). Remember that Datadog packets are sent using UDP and
      # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
      hostname = "127.0.0.1"
      port = 8125

      # Max packet size for UDP metrics data sent to Datadog.
      max-packet-size = 1024 bytes
      measurement-formatter = "default"
      packetbuffer = "default"
    }

    #
    # Settings relevant to the DatadogSpanReporter
    #
    trace {

      # Default to agent URL (https://docs.datadoghq.com/api/?lang=python#tracing)
      api-url = "http://localhost:8126/v0.4/traces"

      # FQCN of the "kamon.datadog.KamonDataDogTranslator" implementation that will convert Kamon Spans into Datadog
      # Spans, or "defult" to use the built-in translator.
      translator = "default"

      # HTTP client timeout settings:
      #   - connect-timeout: how long to wait for an HTTP connection to establish before failing the request.
      #   - read-timeout: how long to wait for a read IO operation to complete before failing the request.
      #   - write-timeout: how long to wait for a write IO operation to complete before failing the request.
      #
      connect-timeout = 5 seconds
      read-timeout = 5 seconds
      write-timeout = 5 seconds
    }

    #
    # Settings relevant to the DatadogAPIReporter
    #
    api {

      # API endpoint to which metrics time series data will be posted.
      api-url = "https://app.datadoghq.com/api/v1/series"

      # Datadog API key to use to send metrics to Datadog directly over HTTPS. The API key will be combined with the
      # API URL to get the complete endpoint use for posting time series to Datadog.
      api-key = ""

      # HTTP client timeout settings:
      #   - connect-timeout: how long to wait for an HTTP connection to establish before failing the request.
      #   - read-timeout: how long to wait for a read IO operation to complete before failing the request.
      #   - write-timeout: how long to wait for a write IO operation to complete before failing the request.
      #
      connect-timeout = 5 seconds
      read-timeout = 5 seconds
      write-timeout = 5 seconds

      # Use 'Deflate' compression when posting to the Datadog API
      compression = false
    }

    # The log level in which to log failures to submit metrics.
    failure-log-level = "error"

    # All time values are collected in nanoseconds,
    # to scale before sending to datadog set "time-units" to "s" or "ms" or "Âµs".
    # Value "n" is equivalent to omitting the setting
    time-unit = "ms"

    # All memory values are collected in bytes,
    # to scale before sending to datadog set "memory-units" to "gb" or "mb" or "kb".
    # Value "b" is equivalent to omitting the setting
    information-unit = "b"

    environment-tags {
      include-service = "yes"
      include-host = "yes"
      include-instance = "yes"
      exclude = []

      filter {
        includes = ["**"]
        excludes = []
      }
    }
  }

  modules {
    datadog-agent {
      enabled = true
      name = "DatadogAgent"
      description = "Datadog agent reporter"
      factory = "kamon.datadog.DatadogAgentReporterFactory"
    }

    datadog-trace-agent {
      enabled = true
      name = "DatadogSpanReporter"
      description = "Datadog Span reporter"
      factory = "kamon.datadog.DatadogSpanReporterFactory"
    }

    datadog-api {
      enabled = false
      name = "DatadogHttp"
      description = "Datadog HTTP reporter"
      factory = "kamon.datadog.DatadogAPIReporterFactory"
    }
  }
}

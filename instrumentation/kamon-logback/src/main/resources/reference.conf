# ===================================== #
# kamon-logback reference configuration #
# ===================================== #

kamon.instrumentation.logback {

  # Controls if and how Context data should be copied into the MDC while events are being logged.
  #
  mdc {

    # MDC keys used to store the current trace and span identifiers. These keys will only be copied if there is a
    # non-empty Span in the Context associated with the logged event.
    trace-id-key = "kamonTraceId"
    span-id-key = "kamonSpanId"
    span-operation-name-key = "kamonSpanName"

    # MDC key used to store the source thread from which the log is written.
    source-thread-key = "kamonSourceThread"

    # Enables copying of Context information into the MDC. Please note that if you only want to include certain Context
    # information in your log patterns you are better off by simply using the conversion rules available under the
    # "tools" package. Copying data into the MDC is required only in cases where third-party tooling expects data from
    # the MDC to be extracted.
    #
    copy {

      # Controls whether Context information should be copied into the MDC or not.
      enabled = yes

      # Controls whether Context tags should be copied into the MDC.
      tags = yes

      # Contains the names of all Context entries that should be copied into the MDC.
      entries = [ ]
    }
  }
}

kanela.modules {
  logback {
    # Controls kanela loading order
    # a setting of 1 ensures that it's loaded as soon as possible
    order = 2
    name = "Logback Instrumentation"
    description = "Provides context propagation to the MDC and on AsyncAppenders"

    instrumentations = [
      "kamon.instrumentation.logback.LogbackInstrumentation"
    ]

    within = [
      "ch.qos.logback..*",
      "com.cwbase.logback..*",
      "net.logstash.logback..*"
    ]
  }
}

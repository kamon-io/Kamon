# ============================================== #
# kamon Cassandra Driver reference configuration #
# ============================================== #

kamon.instrumentation.cassandra {

  metrics {

    # Enables tracking of node connection pool metrics.
    #
    # WARNING: A separate set of instruments is created for each node to which the Driver establishes a connection,
    #          which might create cardinality issues when the driver is connected to clusters with hundreds of nodes.
    track-node-connection-pools = no

    # Interval used to update the in-flight metric in node connection pools.
    sample-interval = 100 milliseconds
  }

  tracing {

    # Enables tracing of queries executed with the Cassandra Driver.
    enabled = yes

    # Decides whether to create additional spans for each round trip to Cassandra. For example, if a query needs to be
    # retried or speculated on, the driver will generate a "query" Span for the user-facing query and as many spans as
    # necessary to track all round trips to Cassandra, using the "query.execution" operation name.
    create-round-trip-spans = no

    # Select which execution target node tags should be included as span and span metric tags. Beware that using the
    # node name as a metric tag can introduce cardinality issues in large clusters.
    #
    # The possible options are:
    #   - span: the tag is added as a Span tag (i.e. using span.tag(...))
    #   - metric: the tag is added a a Span metric tag (i.e. using span.tagMetric(...))
    #   - off: the tag is not used.
    #
    tags {
      dc = span
      rack = span
      node = span
    }
  }
}

kanela {
  modules {
    cassandra-driver {
      name = "Cassandra Driver Instrumentation"
      description = "Provides Cassandra query execution traces and connection pool metrics"

      instrumentations = [
        "kamon.instrumentation.cassandra.driver.DriverInstrumentation",
        "kamon.instrumentation.cassandra.executors.DriverExecutorInstrumentation"
      ]

      within = [
        "com\\.datastax\\.driver\\.core\\..*",
        "com\\.datastax\\.oss\\.driver\\.internal\\.core\\..*",
      ]
    }
  }
}

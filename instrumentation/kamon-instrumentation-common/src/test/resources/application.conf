kamon {

  trace {
    sampler = always
  }

  propagation.http.default {
    tags.mappings {
      "correlation-id" = "x-correlation-id"
    }
  }

  instrumentation {
    http-server {
      default {
        tracing {
          preferred-trace-id-tag = "correlation-id"
          tags.from-context.peer = span
          response-headers {
            trace-id = "x-trace-id"
            span-id = "x-span-id"
          }

          operations {
            default = "default-name"
            mappings {
              "/events/*/rsvps" = "EventRSVPs"
            }
          }
        }
      }

      no-span-metrics {
        tracing.span-metrics = off
      }

      noop {
        propagation.enabled = no
        metrics.enabled = no
        tracing.enabled = no
      }

      with-method-operation-name-generator {
        tracing.operations.name-generator = "method"
      }

      with-custom-operation-name-generator {
        tracing.operations.name-generator = "kamon.instrumentation.http.DedicatedNameGenerator"
      }

      with-custom-server-response-header-generator {
        tracing.response-headers.headers-generator = "kamon.instrumentation.http.DedicatedResponseHeaderGenerator"
      }

    }

    http-client {
      default {
        tracing {
          operations {
            default = "default-name"
            mappings {
              "/events/*/rsvps" = "EventRSVPs"
            }
          }
        }
      }

      no-span-metrics {
        tracing.span-metrics = off
      }

      noop {
        propagation.enabled = no
        metrics.enabled = no
        tracing.enabled = no
      }
    }
  }
}

kanela.modules {
  has-context-mixin-spec {
    name = "custom"
    enabled = true
    inject-in-bootstrap = false
    stoppable = false
    instrumentations = [
      "kamon.instrumentation.context.ContextInstrumentationSpec$Instrumentation"
    ]

    within = [
      "kamon.instrumentation.context.*"
    ]
  }
}
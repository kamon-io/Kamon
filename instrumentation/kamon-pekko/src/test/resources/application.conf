pekko {
  loglevel = INFO
  loggers = [ "kamon.instrumentation.pekko.TestLogger" ]
  logger-startup-timeout = 30s
  log-dead-letters = 0

  actor {
    serialize-messages = on
    warn-about-java-serializer-usage = no

    deployment {
      /picking-the-right-dispatcher-in-pool-router {
        router = round-robin-pool
        resizer = {
          lower-bound = 5
          upper-bound = 64
          messages-per-resize = 20
        }
      }

      "/picking-the-right-dispatcher-in-pool-router/*" {
        dispatcher = custom-dispatcher
      }
    }
  }

  cluster.jmx.multi-mbeans-in-same-jvm = on
}


custom-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
}

tracked-pinned-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
}

kamon {
  instrumentation.pekko {
    filters {

      actors {
        track {
          includes = [ "*/user/tracked-*", "*/user/measuring-*", "*/user/clean-after-collect", "*/user/stop", "*/user/repointable*", "*/" ]
          excludes = [ "*/system/**", "*/user/tracked-explicitly-excluded", "*/user/non-tracked-actor" ]
        }

        trace {
          excludes = [ "*/user/filteredout*" ]
        }

        start-trace {
          includes = [ "*/user/traced*" ]
          excludes = []
        }
      }

      routers {
        includes = [ "*/user/tracked-*", "*/user/measuring-*", "*/user/cleanup-*", "*/user/picking-*", "*/user/stop-*" ]
        excludes = [ "*/user/tracked-explicitly-excluded-*"]
      }

      dispatchers {
        includes = [ "**" ]
        excludes = [ "explicitly-excluded" ]
      }

      groups {
        auto-grouping {
          excludes = [ "*/user/ActorMetricsTestActor", "*/user/SecondLevelGrouping"]
        }

        group-of-actors {
          includes = ["*/user/group-of-actors-*"]
          excludes = []
        }

        group-of-actors-for-cleaning {
          includes = ["*/user/group-of-actors-for-cleaning*"]
          excludes = []
        }

        second-level-group {
          includes = ["*/user/second-level-group/*"]
        }

        group-of-routees {
          includes = ["*/user/group-of-routees*"]
          excludes = []
        }

      }
    }

    cluster-sharding.shard-metrics-sample-interval = 100 millisecond
  }

  metric {
    tick-interval = 1 hour

    factory {
      default-settings {
        range-sampler.auto-update-interval = 20 millis
      }

      custom-settings {
        "pekko.actor.mailbox-size" {
          auto-update-interval = 50 millisecond
        }

        "pekko.group.members" {
          auto-update-interval = 1 millisecond
        }
      }

    }
  }

  trace.sampler = "always"
}

explicitly-excluded {
  type = "Dispatcher"
  executor = "fork-join-executor"
}

tracked-fjp {
  type = "Dispatcher"
  executor = "fork-join-executor"

  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 100.0
    parallelism-max = 22
  }
}

tracked-tpe {
  type = "Dispatcher"
  executor = "thread-pool-executor"

  thread-pool-executor {
    core-pool-size-min = 7
    core-pool-size-factor = 100.0
    max-pool-size-factor  = 100.0
    max-pool-size-max = 21
    core-pool-size-max = 21
  }
}


kanela.modules.pekko-testkit {
  name = "Pekko Testkit Instrumentation"
  description = "Delays messages received by the Test Kit Actors to give enough time for other Threads to finish their work"

  instrumentations = [
    "kamon.instrumentation.pekko.PekkoTestKitInstrumentation"
  ]

  within = [
    "^org.apache.pekko.testkit.*"
  ]
}